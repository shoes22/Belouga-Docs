openapi: 3.0.0
info:
  version: 1.0.0
  title: Belouga API
  license:
    name: MIT
  contact:
    name: Alex Mathews
    email: alex@belouga.org
    url: 'https://belouga.org'
  description: List of publicly available endpoints for Belouga
servers:
  - url: 'https://belouga.org/api'
    description: Belouga Prod
paths:
  /getCountryCodes:
    get:
      summary: Get Country Codes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/models/return-object.v1.yaml
      description: Get list of available 2-letter ISO-encoded country abbreviations from the Belouga database. You will need this to retrieve state and school information.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: PASETO Token
          required: true
      tags:
        - retrieval
    parameters: []
  '/getStatesByCountryCode/{countryCode}':
    get:
      summary: Get States by Country Code
      tags:
        - retrieval
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/models/return-object.v1.yaml
      parameters:
        - schema:
            type: string
          in: header
          description: PASETO Token
          name: Authorization
          required: true
      description: 'Get list of states/regions within country from country code, retrieved from getCountryCodes API endpoint.'
    parameters:
      - schema:
          type: string
        name: countryCode
        in: path
        description: 2-letter ISO code
  '/getSchoolsByStateID/{stateID}':
    get:
      summary: Get Schools By State ID
      tags:
        - retrieval
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/models/return-object.v1.yaml
      description: Retrieve a list of school IDs and names in a state ID or country region from a given state ID.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: PASETO Token
          required: true
    parameters:
      - schema:
          type: integer
        name: stateID
        in: path
        required: true
        description: Belouga DB ID
  '/getDistrictsByStateID/{stateID}':
    get:
      summary: Get Districts By State ID
      tags:
        - retrieval
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/models/return-object.v1.yaml
      description: Retrieve a list of district IDs and names in a state ID or country region from a given state ID.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: PASETO Token
          required: true
    parameters:
      - schema:
          type: integer
        in: path
        required: true
        name: stateID
        description: Belouga DB ID
  '/checkUsername/{username}':
    parameters:
      - type: string
        name: username
        in: path
        required: true
        schema:
          type: string
        description: ''
    get:
      summary: Check Username
      tags:
        - validation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/models/return-object.v1.yaml
      description: Validate and check that username is unique in Belouga database
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: PASETO Token
          required: true
  '/checkEmail/{email}':
    get:
      summary: Check Email
      tags:
        - validation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/models/return-object.v1.yaml
      description: Validate and check that email is unique in Belouga database.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: PASETO Token
          required: true
    parameters:
      - schema:
          type: string
        name: email
        in: path
        required: true
        description: Email address
  /registerTeacher:
    get:
      summary: Register Teacher
      tags:
        - registration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/models/return-object.v1.yaml
      description: Register Teacher on Belouga
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: PASETO Token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/user.v1.yaml
        description: Do not actually send this object in the body. Embed it inside the claims field of the PASETO token.
  /login:
    get:
      summary: login
      description: Login to Belouga and redirect to logged in home page
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: PASETO Token
          required: true
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                description: 'Returns a complete HTML page, which is the homepage after the user is logged in'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/login-object.v1.yaml
        description: Do not actually send this object in the body. Embed it inside the claims field of the PASETO token.
      tags:
        - Login
  /registerStudent:
    get:
      summary: Register Student
      tags:
        - registration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../common/models/return-object.v1.yaml
      description: Register Student on Belouga
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: PASETO Token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student-User'
        description: Do not actually send this object in the body. Embed it inside the claims field of the PASETO token.
  /registerClassroom:
    get:
      summary: Register Classroom
      tags:
        - registration
      responses:
        '200':
          description: 'On successful submission, will return the classroom ID that was just created.'
          content:
            application/json:
              schema:
                $ref: ../common/models/return-object.v1.yaml
      description: Register Classroom on Belouga
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: PASETO Token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classroom-Object'
        description: Do not actually send this object in the body. Embed it inside the claims field of the PASETO token.
components:
  schemas:
    Student-User:
      title: Student-User
      type: object
      description: "Object submitted for student registration with key 'user'"
      properties:
        type:
          type: string
          description: 'This is a string that determines whether this is a student or teacher account. Only valid value right now is "Student".'
        student-first-name:
          type: string
        student-last-name:
          type: string
        student-username:
          type: string
          description: Must be unique
        student-password:
          type: string
          description: 'The plaintext unencrypted password. Plaintext here because we will be encrypting the password in our own database, and this data is transmitted encrypted to our servers.'
        student-confirm-password:
          type: string
          description: 'It is expected that you will check this field client-side before submitting. Required on registration form, but not required to be submitted.'
        student-birthday:
          type: string
          description: 'Semi-required field. Field should be submitted in YYYY-MM-DD format. If this field is not provided during registraiton, it will be asked upon student login.'
        classroomId:
          type: string
          description: 'Semi-required field. If not provided during registration, students will be asked to register into a classroom (with verification images) upon login.'
      required:
        - type
        - student-first-name
        - student-last-name
        - student-username
        - student-password
    Classroom-Object:
      title: Classroom-Object
      type: object
      description: "Object submitted for classroom registration with key 'classroom'"
      properties:
        school_id:
          type: string
          description: The school the classroom belongs to. Must be an existing school in our databse.
        name:
          type: string
          description: Name of the classroom
        description:
          type: string
          description: Description of the classroom
        classroom_verification_image_one:
          $ref: '#/components/schemas/Classroom-Verification-Icons'
        classroom_verification_image_two:
          $ref: '#/components/schemas/Classroom-Verification-Icons'
      required:
        - school_id
        - name
        - description
        - classroom_verification_image_one
        - classroom_verification_image_two
    Classroom-Verification-Icons:
      oneOf:
        - description: '1: Pencil'
        - description: |
            2: Ball
        - description: '3: Chalkboard'
        - description: '4: School'
        - description: '5: Clock'
        - description: '6: Notebook'
        - description: '7: Computer'
        - description: '8: Backpack'
        - description: '9: Globe'
      type: integer
      description: For when students register to classroom in platform.
  securitySchemes:
    API Key - 1:
      type: http
      scheme: Bearer
      description: Paseto Token
